// Code generated by go-swagger; DO NOT EDIT.

package add_sensordata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/arshabbir/sensor/models"
)

// PostAddCreatedCode is the HTTP code returned for type PostAddCreated
const PostAddCreatedCode int = 201

/*PostAddCreated Created

swagger:response postAddCreated
*/
type PostAddCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Reading `json:"body,omitempty"`
}

// NewPostAddCreated creates PostAddCreated with default headers values
func NewPostAddCreated() *PostAddCreated {

	return &PostAddCreated{}
}

// WithPayload adds the payload to the post add created response
func (o *PostAddCreated) WithPayload(payload *models.Reading) *PostAddCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add created response
func (o *PostAddCreated) SetPayload(payload *models.Reading) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostAddDefault error

swagger:response postAddDefault
*/
type PostAddDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Apierror `json:"body,omitempty"`
}

// NewPostAddDefault creates PostAddDefault with default headers values
func NewPostAddDefault(code int) *PostAddDefault {
	if code <= 0 {
		code = 500
	}

	return &PostAddDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post add default response
func (o *PostAddDefault) WithStatusCode(code int) *PostAddDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post add default response
func (o *PostAddDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post add default response
func (o *PostAddDefault) WithPayload(payload *models.Apierror) *PostAddDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add default response
func (o *PostAddDefault) SetPayload(payload *models.Apierror) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
