// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Sensor application",
    "title": "Sensor application",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "SensorData"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list the sensor data",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reading"
              }
            }
          },
          "default": {
            "description": "API error response",
            "schema": {
              "$ref": "#/definitions/apierror"
            }
          }
        }
      }
    },
    "/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Add sensordata"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/reading"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/reading"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/apierror"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "apierror": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "reading": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 20,
          "minLength": 3
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Sensor application",
    "title": "Sensor application",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "SensorData"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list the sensor data",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reading"
              }
            }
          },
          "default": {
            "description": "API error response",
            "schema": {
              "$ref": "#/definitions/apierror"
            }
          }
        }
      }
    },
    "/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Add sensordata"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/reading"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/reading"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/apierror"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "apierror": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "reading": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 20,
          "minLength": 3
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}`))
}
